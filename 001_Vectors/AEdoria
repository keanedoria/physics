{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "afdc6b37-28e0-4738-bf60-bfe4efa01464",
   "metadata": {
    "id": "afdc6b37-28e0-4738-bf60-bfe4efa01464"
   },
   "source": [
    "- **Name:** Aj Kean Edoria\n",
    "- **Term:** 2nd Term AY 2024-2025"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a6e9d53b",
   "metadata": {
    "id": "a6e9d53b"
   },
   "source": [
    "### Vectors in Physics and Engineering\n",
    "\n",
    "Vectors are essential in physics and engineering because they allow us to represent quantities that have both magnitude and direction. Examples of such quantities include displacement, velocity, force, and acceleration.\n",
    "\n",
    "In this notebook, we will:\n",
    "- Understand the basics of vectors\n",
    "- Perform operations like addition, subtraction, and scalar multiplication\n",
    "- Explore applications of vectors in engineering problems"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c17cac97",
   "metadata": {
    "id": "c17cac97"
   },
   "source": [
    "### Scalars vs. Vectors\n",
    "- **Scalars**: Quantities with only magnitude (e.g., mass, temperature).\n",
    "- **Vectors**: Quantities with both magnitude and direction (e.g., force, velocity).\n",
    "\n",
    "Mathematically, a vector is represented as:\n",
    "$[ \\vec{A} = \\langle A_x, A_y, A_z \\rangle ]$\n",
    "where $( A_x, A_y, A_z )$ are the components of the vector along the x, y, and z axes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "e9182c82-3dc7-4822-a9b0-a3c1af8a9b27",
   "metadata": {
    "id": "e9182c82-3dc7-4822-a9b0-a3c1af8a9b27"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting numpy\n",
      "  Downloading numpy-2.2.2-cp312-cp312-win_amd64.whl.metadata (60 kB)\n",
      "Downloading numpy-2.2.2-cp312-cp312-win_amd64.whl (12.6 MB)\n",
      "   ---------------------------------------- 0.0/12.6 MB ? eta -:--:--\n",
      "    --------------------------------------- 0.3/12.6 MB ? eta -:--:--\n",
      "   - -------------------------------------- 0.5/12.6 MB 1.1 MB/s eta 0:00:11\n",
      "   -- ------------------------------------- 0.8/12.6 MB 1.2 MB/s eta 0:00:10\n",
      "   --- ------------------------------------ 1.0/12.6 MB 1.3 MB/s eta 0:00:09\n",
      "   ---- ----------------------------------- 1.3/12.6 MB 1.3 MB/s eta 0:00:09\n",
      "   ---- ----------------------------------- 1.6/12.6 MB 1.4 MB/s eta 0:00:09\n",
      "   ----- ---------------------------------- 1.8/12.6 MB 1.4 MB/s eta 0:00:08\n",
      "   ------ --------------------------------- 2.1/12.6 MB 1.3 MB/s eta 0:00:08\n",
      "   ------- -------------------------------- 2.4/12.6 MB 1.3 MB/s eta 0:00:08\n",
      "   -------- ------------------------------- 2.6/12.6 MB 1.3 MB/s eta 0:00:08\n",
      "   --------- ------------------------------ 2.9/12.6 MB 1.3 MB/s eta 0:00:08\n",
      "   --------- ------------------------------ 3.1/12.6 MB 1.3 MB/s eta 0:00:08\n",
      "   ----------- ---------------------------- 3.7/12.6 MB 1.4 MB/s eta 0:00:07\n",
      "   ------------ --------------------------- 3.9/12.6 MB 1.4 MB/s eta 0:00:07\n",
      "   ------------- -------------------------- 4.2/12.6 MB 1.4 MB/s eta 0:00:07\n",
      "   ------------- -------------------------- 4.2/12.6 MB 1.4 MB/s eta 0:00:07\n",
      "   -------------- ------------------------- 4.5/12.6 MB 1.3 MB/s eta 0:00:07\n",
      "   -------------- ------------------------- 4.7/12.6 MB 1.3 MB/s eta 0:00:07\n",
      "   -------------- ------------------------- 4.7/12.6 MB 1.3 MB/s eta 0:00:07\n",
      "   --------------- ------------------------ 5.0/12.6 MB 1.2 MB/s eta 0:00:07\n",
      "   --------------- ------------------------ 5.0/12.6 MB 1.2 MB/s eta 0:00:07\n",
      "   ---------------- ----------------------- 5.2/12.6 MB 1.2 MB/s eta 0:00:07\n",
      "   ----------------- ---------------------- 5.5/12.6 MB 1.2 MB/s eta 0:00:07\n",
      "   ----------------- ---------------------- 5.5/12.6 MB 1.2 MB/s eta 0:00:07\n",
      "   ------------------ --------------------- 5.8/12.6 MB 1.1 MB/s eta 0:00:07\n",
      "   ------------------- -------------------- 6.0/12.6 MB 1.1 MB/s eta 0:00:06\n",
      "   ------------------- -------------------- 6.3/12.6 MB 1.1 MB/s eta 0:00:06\n",
      "   -------------------- ------------------- 6.6/12.6 MB 1.1 MB/s eta 0:00:06\n",
      "   --------------------- ------------------ 6.8/12.6 MB 1.1 MB/s eta 0:00:06\n",
      "   ----------------------- ---------------- 7.3/12.6 MB 1.2 MB/s eta 0:00:05\n",
      "   ----------------------- ---------------- 7.3/12.6 MB 1.2 MB/s eta 0:00:05\n",
      "   ------------------------ --------------- 7.6/12.6 MB 1.2 MB/s eta 0:00:05\n",
      "   ------------------------ --------------- 7.9/12.6 MB 1.1 MB/s eta 0:00:05\n",
      "   ------------------------- -------------- 8.1/12.6 MB 1.1 MB/s eta 0:00:04\n",
      "   -------------------------- ------------- 8.4/12.6 MB 1.1 MB/s eta 0:00:04\n",
      "   --------------------------- ------------ 8.7/12.6 MB 1.1 MB/s eta 0:00:04\n",
      "   ---------------------------- ----------- 8.9/12.6 MB 1.1 MB/s eta 0:00:04\n",
      "   ---------------------------- ----------- 8.9/12.6 MB 1.1 MB/s eta 0:00:04\n",
      "   ----------------------------- ---------- 9.2/12.6 MB 1.1 MB/s eta 0:00:04\n",
      "   ----------------------------- ---------- 9.4/12.6 MB 1.1 MB/s eta 0:00:03\n",
      "   ------------------------------ --------- 9.7/12.6 MB 1.1 MB/s eta 0:00:03\n",
      "   ------------------------------ --------- 9.7/12.6 MB 1.1 MB/s eta 0:00:03\n",
      "   ------------------------------- -------- 10.0/12.6 MB 1.1 MB/s eta 0:00:03\n",
      "   -------------------------------- ------- 10.2/12.6 MB 1.1 MB/s eta 0:00:03\n",
      "   -------------------------------- ------- 10.2/12.6 MB 1.1 MB/s eta 0:00:03\n",
      "   --------------------------------- ------ 10.5/12.6 MB 1.1 MB/s eta 0:00:02\n",
      "   --------------------------------- ------ 10.5/12.6 MB 1.1 MB/s eta 0:00:02\n",
      "   ---------------------------------- ----- 10.7/12.6 MB 1.1 MB/s eta 0:00:02\n",
      "   ---------------------------------- ----- 10.7/12.6 MB 1.1 MB/s eta 0:00:02\n",
      "   ---------------------------------- ----- 11.0/12.6 MB 1.0 MB/s eta 0:00:02\n",
      "   ---------------------------------- ----- 11.0/12.6 MB 1.0 MB/s eta 0:00:02\n",
      "   ----------------------------------- ---- 11.3/12.6 MB 1.0 MB/s eta 0:00:02\n",
      "   ------------------------------------ --- 11.5/12.6 MB 1.0 MB/s eta 0:00:02\n",
      "   ------------------------------------ --- 11.5/12.6 MB 1.0 MB/s eta 0:00:02\n",
      "   ------------------------------------- -- 11.8/12.6 MB 1.0 MB/s eta 0:00:01\n",
      "   ------------------------------------- -- 11.8/12.6 MB 1.0 MB/s eta 0:00:01\n",
      "   -------------------------------------- - 12.1/12.6 MB 1.0 MB/s eta 0:00:01\n",
      "   -------------------------------------- - 12.1/12.6 MB 1.0 MB/s eta 0:00:01\n",
      "   ---------------------------------------  12.3/12.6 MB 1.0 MB/s eta 0:00:01\n",
      "   ---------------------------------------- 12.6/12.6 MB 999.5 kB/s eta 0:00:00\n",
      "Installing collected packages: numpy\n",
      "Successfully installed numpy-2.2.2\n"
     ]
    }
   ],
   "source": [
    "!pip install numpy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c660286c",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "c660286c",
    "outputId": "d3180598-dfbb-4e7f-a3cc-53e0122d7185"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Vector A: [3 4 0]\n",
      "Vector B: [1 2 3]\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "\n",
    "# Define two vectors\n",
    "A = np.array([3, 4, 0])  # Vector A\n",
    "B = np.array([1, 2, 3])  # Vector B\n",
    "\n",
    "print(\"Vector A:\", A)\n",
    "print(\"Vector B:\", B)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fcd75837",
   "metadata": {
    "id": "fcd75837"
   },
   "source": [
    "### Vector Operations\n",
    "#### 1. **Addition**\n",
    "$[ \\vec{C} = \\vec{A} + \\vec{B} ]$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "39196b6e",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "39196b6e",
    "outputId": "ecfc4c3a-be6a-48fe-d9d5-447dae0aea17"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "A + B = [4 6 3]\n"
     ]
    }
   ],
   "source": [
    "# Vector addition\n",
    "C = A + B\n",
    "print(\"A + B =\", C)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a461b762",
   "metadata": {
    "id": "a461b762"
   },
   "source": [
    "#### 2. **Subtraction**\n",
    "$[ \\vec{C} = \\vec{A} - \\vec{B} ]$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "772b5dac",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "772b5dac",
    "outputId": "4c852bdc-90fe-4502-911b-7a7c3081ab30"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "A - B = [ 2  2 -3]\n"
     ]
    }
   ],
   "source": [
    "# Vector subtraction\n",
    "C = A - B\n",
    "print(\"A - B =\", C)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fc01f938",
   "metadata": {
    "id": "fc01f938"
   },
   "source": [
    "#### 3. **Scalar Multiplication**\n",
    "$[ \\vec{C} = k \\cdot \\vec{A} ]$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "b689e66e",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "b689e66e",
    "outputId": "421f9e16-ac85-4cd1-c1a9-97f6acb40be4"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2 * A = [6 8 0]\n"
     ]
    }
   ],
   "source": [
    "# Scalar multiplication\n",
    "k = 2\n",
    "C = k * A\n",
    "print(f\"{k} * A =\", C)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8f2b4f49",
   "metadata": {
    "id": "8f2b4f49"
   },
   "source": [
    "#### 4. **Dot Product**\n",
    "The dot product measures the projection of one vector onto another.\n",
    "$[ \\vec{A} \\cdot \\vec{B} = A_x B_x + A_y B_y + A_z B_z ]$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "64514d6f",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "64514d6f",
    "outputId": "212bdfdd-272f-4e9f-f33d-537f91091059"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dot product A · B = 11\n"
     ]
    }
   ],
   "source": [
    "# Dot product\n",
    "dot_product = np.dot(A, B)\n",
    "print(\"Dot product A · B =\", dot_product)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "925628c5",
   "metadata": {
    "id": "925628c5"
   },
   "source": [
    "#### 5. **Cross Product**\n",
    "The cross product results in a vector perpendicular to the plane formed by two vectors.\n",
    "$[ \\vec{C} = \\vec{A} \\times \\vec{B} ]$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "22463d20",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "22463d20",
    "outputId": "6215d4ef-af84-480b-9ccb-c874c07a59b2"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Cross product A × B = [12 -9  2]\n"
     ]
    }
   ],
   "source": [
    "# Cross product\n",
    "cross_product = np.cross(A, B)\n",
    "print(\"Cross product A × B =\", cross_product)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4e68bd3b",
   "metadata": {
    "id": "4e68bd3b"
   },
   "source": [
    "### Applications in Engineering\n",
    "1. **Statics**: Calculating forces acting on structures.\n",
    "2. **Kinematics**: Analyzing motion in 2D and 3D spaces.\n",
    "3. **Electromagnetism**: Representing electric and magnetic fields.\n",
    "\n",
    "#### Example Problem: Force Equilibrium\n",
    "A structure is in equilibrium under the action of three forces:\n",
    "$[ \\vec{F_1} = \\langle 5, 0, 0 \\rangle, \\quad \\vec{F_2} = \\langle -3, 4, 0 \\rangle ]$\n",
    "Find the third force $( \\vec{F_3} )$."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "23b4d45a",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "23b4d45a",
    "outputId": "759fa668-1e77-4a15-97bc-9cc41092a26f"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Force F3: [-2 -4  0]\n"
     ]
    }
   ],
   "source": [
    "# Forces in equilibrium\n",
    "F1 = np.array([5, 0, 0])\n",
    "F2 = np.array([-3, 4, 0])\n",
    "F3 = -(F1 + F2)  # Sum of forces must be zero\n",
    "print(\"Force F3:\", F3)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f07a618b",
   "metadata": {
    "id": "f07a618b"
   },
   "source": [
    "### Visualization\n",
    "Using Python's `matplotlib`, vectors can be visualized in 2D or 3D with enhanced features like labeled axes, gridlines, and customized colors for better clarity."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "19b1f968-c9f6-45a6-9adb-46f48fe1fdcb",
   "metadata": {
    "id": "19b1f968-c9f6-45a6-9adb-46f48fe1fdcb"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting matplotlib\n",
      "  Downloading matplotlib-3.10.0-cp312-cp312-win_amd64.whl.metadata (11 kB)\n",
      "Collecting contourpy>=1.0.1 (from matplotlib)\n",
      "  Downloading contourpy-1.3.1-cp312-cp312-win_amd64.whl.metadata (5.4 kB)\n",
      "Collecting cycler>=0.10 (from matplotlib)\n",
      "  Downloading cycler-0.12.1-py3-none-any.whl.metadata (3.8 kB)\n",
      "Collecting fonttools>=4.22.0 (from matplotlib)\n",
      "  Downloading fonttools-4.55.8-cp312-cp312-win_amd64.whl.metadata (103 kB)\n",
      "Collecting kiwisolver>=1.3.1 (from matplotlib)\n",
      "  Downloading kiwisolver-1.4.8-cp312-cp312-win_amd64.whl.metadata (6.3 kB)\n",
      "Requirement already satisfied: numpy>=1.23 in c:\\users\\jheboy\\anaconda3\\envs\\physics\\lib\\site-packages (from matplotlib) (2.2.2)\n",
      "Requirement already satisfied: packaging>=20.0 in c:\\users\\jheboy\\anaconda3\\envs\\physics\\lib\\site-packages (from matplotlib) (24.2)\n",
      "Collecting pillow>=8 (from matplotlib)\n",
      "  Downloading pillow-11.1.0-cp312-cp312-win_amd64.whl.metadata (9.3 kB)\n",
      "Collecting pyparsing>=2.3.1 (from matplotlib)\n",
      "  Downloading pyparsing-3.2.1-py3-none-any.whl.metadata (5.0 kB)\n",
      "Requirement already satisfied: python-dateutil>=2.7 in c:\\users\\jheboy\\anaconda3\\envs\\physics\\lib\\site-packages (from matplotlib) (2.9.0.post0)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\jheboy\\anaconda3\\envs\\physics\\lib\\site-packages (from python-dateutil>=2.7->matplotlib) (1.16.0)\n",
      "Downloading matplotlib-3.10.0-cp312-cp312-win_amd64.whl (8.0 MB)\n",
      "   ---------------------------------------- 0.0/8.0 MB ? eta -:--:--\n",
      "   ---------------------------------------- 0.0/8.0 MB ? eta -:--:--\n",
      "   - -------------------------------------- 0.3/8.0 MB ? eta -:--:--\n",
      "   -- ------------------------------------- 0.5/8.0 MB 1.0 MB/s eta 0:00:08\n",
      "   --- ------------------------------------ 0.8/8.0 MB 1.1 MB/s eta 0:00:07\n",
      "   --- ------------------------------------ 0.8/8.0 MB 1.1 MB/s eta 0:00:07\n",
      "   ------ --------------------------------- 1.3/8.0 MB 1.2 MB/s eta 0:00:06\n",
      "   ------- -------------------------------- 1.6/8.0 MB 1.2 MB/s eta 0:00:06\n",
      "   ------- -------------------------------- 1.6/8.0 MB 1.2 MB/s eta 0:00:06\n",
      "   --------- ------------------------------ 1.8/8.0 MB 1.1 MB/s eta 0:00:06\n",
      "   --------- ------------------------------ 1.8/8.0 MB 1.1 MB/s eta 0:00:06\n",
      "   ---------- ----------------------------- 2.1/8.0 MB 987.1 kB/s eta 0:00:07\n",
      "   ------------- -------------------------- 2.6/8.0 MB 1.1 MB/s eta 0:00:05\n",
      "   -------------- ------------------------- 2.9/8.0 MB 1.1 MB/s eta 0:00:05\n",
      "   --------------- ------------------------ 3.1/8.0 MB 1.1 MB/s eta 0:00:05\n",
      "   ---------------- ----------------------- 3.4/8.0 MB 1.1 MB/s eta 0:00:05\n",
      "   ------------------ --------------------- 3.7/8.0 MB 1.1 MB/s eta 0:00:04\n",
      "   ------------------- -------------------- 3.9/8.0 MB 1.2 MB/s eta 0:00:04\n",
      "   ------------------- -------------------- 3.9/8.0 MB 1.2 MB/s eta 0:00:04\n",
      "   -------------------- ------------------- 4.2/8.0 MB 1.1 MB/s eta 0:00:04\n",
      "   ----------------------- ---------------- 4.7/8.0 MB 1.2 MB/s eta 0:00:03\n",
      "   ------------------------ --------------- 5.0/8.0 MB 1.2 MB/s eta 0:00:03\n",
      "   -------------------------- ------------- 5.2/8.0 MB 1.2 MB/s eta 0:00:03\n",
      "   ----------------------------- ---------- 6.0/8.0 MB 1.3 MB/s eta 0:00:02\n",
      "   -------------------------------- ------- 6.6/8.0 MB 1.3 MB/s eta 0:00:02\n",
      "   ----------------------------------- ---- 7.1/8.0 MB 1.4 MB/s eta 0:00:01\n",
      "   ------------------------------------ --- 7.3/8.0 MB 1.4 MB/s eta 0:00:01\n",
      "   ---------------------------------------  7.9/8.0 MB 1.4 MB/s eta 0:00:01\n",
      "   ---------------------------------------- 8.0/8.0 MB 1.4 MB/s eta 0:00:00\n",
      "Downloading contourpy-1.3.1-cp312-cp312-win_amd64.whl (220 kB)\n",
      "Downloading cycler-0.12.1-py3-none-any.whl (8.3 kB)\n",
      "Downloading fonttools-4.55.8-cp312-cp312-win_amd64.whl (2.2 MB)\n",
      "   ---------------------------------------- 0.0/2.2 MB ? eta -:--:--\n",
      "   --------- ------------------------------ 0.5/2.2 MB 4.2 MB/s eta 0:00:01\n",
      "   ------------------- -------------------- 1.0/2.2 MB 3.0 MB/s eta 0:00:01\n",
      "   --------------------------------- ------ 1.8/2.2 MB 3.0 MB/s eta 0:00:01\n",
      "   ---------------------------------------- 2.2/2.2 MB 2.9 MB/s eta 0:00:00\n",
      "Downloading kiwisolver-1.4.8-cp312-cp312-win_amd64.whl (71 kB)\n",
      "Downloading pillow-11.1.0-cp312-cp312-win_amd64.whl (2.6 MB)\n",
      "   ---------------------------------------- 0.0/2.6 MB ? eta -:--:--\n",
      "   ------- -------------------------------- 0.5/2.6 MB 3.4 MB/s eta 0:00:01\n",
      "   ------------------- -------------------- 1.3/2.6 MB 3.0 MB/s eta 0:00:01\n",
      "   --------------------------- ------------ 1.8/2.6 MB 3.0 MB/s eta 0:00:01\n",
      "   ----------------------------------- ---- 2.4/2.6 MB 2.9 MB/s eta 0:00:01\n",
      "   ---------------------------------------- 2.6/2.6 MB 2.8 MB/s eta 0:00:00\n",
      "Downloading pyparsing-3.2.1-py3-none-any.whl (107 kB)\n",
      "Installing collected packages: pyparsing, pillow, kiwisolver, fonttools, cycler, contourpy, matplotlib\n",
      "Successfully installed contourpy-1.3.1 cycler-0.12.1 fonttools-4.55.8 kiwisolver-1.4.8 matplotlib-3.10.0 pillow-11.1.0 pyparsing-3.2.1\n"
     ]
    }
   ],
   "source": [
    "!pip install matplotlib"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "6b0ea2c9",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 394
    },
    "id": "6b0ea2c9",
    "outputId": "adafce4d-ca59-4a1d-e079-3aaea000dc47"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "from mpl_toolkits.mplot3d import Axes3D\n",
    "\n",
    "fig = plt.figure(figsize=(8, 6))\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "\n",
    "# Plot forces\n",
    "ax.quiver(0, 0, 0, F1[0], F1[1], F1[2], color='r', label='F1', linewidth=2)\n",
    "ax.quiver(0, 0, 0, F2[0], F2[1], F2[2], color='b', label='F2', linewidth=2)\n",
    "ax.quiver(0, 0, 0, F3[0], F3[1], F3[2], color='g', label='F3', linewidth=2, linestyle='dotted')\n",
    "\n",
    "# Set axis limits\n",
    "ax.set_xlim([-5, 6])\n",
    "ax.set_ylim([-5, 6])\n",
    "ax.set_zlim([-5, 6])\n",
    "\n",
    "# Add gridlines and labels\n",
    "ax.grid(True)\n",
    "ax.set_xlabel(\"X-axis\")\n",
    "ax.set_ylabel(\"Y-axis\")\n",
    "ax.set_zlabel(\"Z-axis\")\n",
    "ax.set_title(\"Force Equilibrium Visualization\")\n",
    "\n",
    "# Add legend\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
